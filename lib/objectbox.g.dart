// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'features/favorite/data/models/object_box_image_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(2, 7068477907920091171),
    name: 'ObjectBoxImageModel',
    lastPropertyId: const obx_int.IdUid(6, 5167279756182735626),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 2616796721641679743),
        name: 'obxId',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 8364377287993831713),
        name: 'id',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 7618213239799024060),
        name: 'previewUrl',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1345418221031562908),
        name: 'fullImageUrl',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 8565835740229778635),
        name: 'imageSize',
        type: 6,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 5167279756182735626),
        name: 'user',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(2, 7068477907920091171),
    lastIndexId: const obx_int.IdUid(0, 0),
    lastRelationId: const obx_int.IdUid(0, 0),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [6201347194107509287],
    retiredIndexUids: const [],
    retiredPropertyUids: const [
      2469297558669051360,
      1627902742782191690,
      5240027010307251637,
      1619045839398612784,
      5528661801473460968,
    ],
    retiredRelationUids: const [],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    ObjectBoxImageModel: obx_int.EntityDefinition<ObjectBoxImageModel>(
      model: _entities[0],
      toOneRelations: (ObjectBoxImageModel object) => [],
      toManyRelations: (ObjectBoxImageModel object) => {},
      getId: (ObjectBoxImageModel object) => object.obxId,
      setId: (ObjectBoxImageModel object, int id) {
        object.obxId = id;
      },
      objectToFB: (ObjectBoxImageModel object, fb.Builder fbb) {
        final idOffset = fbb.writeString(object.id);
        final previewUrlOffset = fbb.writeString(object.previewUrl);
        final fullImageUrlOffset = fbb.writeString(object.fullImageUrl);
        final userOffset = fbb.writeString(object.user);
        fbb.startTable(7);
        fbb.addInt64(0, object.obxId);
        fbb.addOffset(1, idOffset);
        fbb.addOffset(2, previewUrlOffset);
        fbb.addOffset(3, fullImageUrlOffset);
        fbb.addInt64(4, object.imageSize);
        fbb.addOffset(5, userOffset);
        fbb.finish(fbb.endTable());
        return object.obxId;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final obxIdParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final idParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final previewUrlParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 8, '');
        final fullImageUrlParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 10, '');
        final imageSizeParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          12,
          0,
        );
        final userParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 14, '');
        final object = ObjectBoxImageModel(
          obxId: obxIdParam,
          id: idParam,
          previewUrl: previewUrlParam,
          fullImageUrl: fullImageUrlParam,
          imageSize: imageSizeParam,
          user: userParam,
        );

        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ObjectBoxImageModel] entity fields to define ObjectBox queries.
class ObjectBoxImageModel_ {
  /// See [ObjectBoxImageModel.obxId].
  static final obxId = obx.QueryIntegerProperty<ObjectBoxImageModel>(
    _entities[0].properties[0],
  );

  /// See [ObjectBoxImageModel.id].
  static final id = obx.QueryStringProperty<ObjectBoxImageModel>(
    _entities[0].properties[1],
  );

  /// See [ObjectBoxImageModel.previewUrl].
  static final previewUrl = obx.QueryStringProperty<ObjectBoxImageModel>(
    _entities[0].properties[2],
  );

  /// See [ObjectBoxImageModel.fullImageUrl].
  static final fullImageUrl = obx.QueryStringProperty<ObjectBoxImageModel>(
    _entities[0].properties[3],
  );

  /// See [ObjectBoxImageModel.imageSize].
  static final imageSize = obx.QueryIntegerProperty<ObjectBoxImageModel>(
    _entities[0].properties[4],
  );

  /// See [ObjectBoxImageModel.user].
  static final user = obx.QueryStringProperty<ObjectBoxImageModel>(
    _entities[0].properties[5],
  );
}
